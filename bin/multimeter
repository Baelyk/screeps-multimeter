#!/usr/bin/env node

const ScreepsAPI = require('screeps-api')
const blessed = require('blessed');
const path = require('path');
const fs = require('fs');
const homedir = require('homedir');
const MainView = require('../src/main_view');
const configManager = require('../src/config_manager');
const nux = require('../src/nux');

const MOTD = "Now showing Screeps console. Type /help for help.";

Promise.resolve(loadConfig())
  .then(connect)
  .then(start)
  .catch((ex) => {
    console.error(ex);
    process.exit(1);
  });

function loadConfig() {
  return configManager.loadConfig()
    .then(([path, config]) => {
      if (path) return config;
      // No saved config, need to run the NUX.
      return nux().then(([path, config]) => config);
    });
}

function connect(config) {
  return new Promise((resolve, reject) => {
    console.log("Connecting to Screens...");
    let api = new ScreepsAPI();
    api.auth(config.email, config.password, (err, result) => {
      if (result) {
        resolve(api);
      } else {
        console.error('Authentication failed')
        reject(err);
      }
    })
  }).then((api) => new Promise((resolve, reject) => {
    api.socket();

    api.on('message', (msg) => {
      if (msg.slice(0, 7) == 'auth ok') {
        resolve(api);
      }
    })
  }));
}

function start(api) {
  return new Promise((resolve, reject) => {
    let screen = blessed.screen({
      smartCSR: true,
    });

    screen.title = "Screeps";

    let view = new MainView({
      parent: screen,
      top: 0,
      left: 0,
      width: screen.width,
      height: screen.height,
    });

    view.on('exit', () => {
      screen.destroy();
      process.exit(0);
    });

    view.setAPI(api);
    view.focus();
    view.log(MOTD);
  })
}
